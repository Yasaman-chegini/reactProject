{"version":3,"sources":["components/Square.jsx","components/Board.jsx","components/Game.jsx","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","paper","background","padding","spacing","textAlign","width","height","Square","props","classes","Button","variant","className","onClick","value","Board","rdSq","i","squares","MyButton","styled","border","borderRadius","boxShadow","color","margin","Game","state","xORo","stepNumber","history","Array","fill","step","this","setState","slice","length","winner","whoIsWinner","concat","current","moves","map","move","desc","move_To","status","handeler","React","Component","winnerLines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ce57bfbc.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n//give style to game bord's button\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    background: 'linear-gradient(45deg, #0ead93 20%, #07ebc6 90%)',\r\n    padding: theme.spacing(1),\r\n    textAlign: \"center\",\r\n    width: 100,\r\n    height: 100,\r\n  },\r\n}));\r\n\r\n//game bord's button\r\nexport default function Square(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Button\r\n      variant=\"outlined\"\r\n      className={classes.paper}\r\n      onClick={props.onClick}\r\n    >\r\n      {props.value}\r\n    </Button>\r\n  );\r\n}\r\n\r\n","import React from \"react\";\r\nimport Square from \"./Square\";\r\n\r\n//making game bord\r\nexport default function Board(props) {\r\n  const rdSq = (i) => {\r\n    return (\r\n      <Square\r\n        value={props.squares[i]}\r\n        onClick={() => props.onClick(i)}\r\n      ></Square>\r\n    );\r\n  };\r\n  return (\r\n    <div>\r\n      <div>\r\n        {rdSq(0)}\r\n        {rdSq(1)}\r\n        {rdSq(2)}\r\n      </div>\r\n      <div>\r\n        {rdSq(3)}\r\n        {rdSq(4)}\r\n        {rdSq(5)}\r\n      </div>\r\n      <div>\r\n        {rdSq(6)}\r\n        {rdSq(7)}\r\n        {rdSq(8)}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Board from \"./Board\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { styled } from \"@material-ui/core/styles\";\r\n\r\n//give style to move's history\r\nconst MyButton = styled(Button)({\r\n  background: \"linear-gradient(45deg, #0ead93 30%, #07ebc6 90%)\",\r\n  border: 0,\r\n  borderRadius: 3,\r\n  boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\r\n  color: \"primary\",\r\n  height: 48,\r\n  padding: \"0 30px\",\r\n  margin: \"1px 5px\",\r\n});\r\n\r\nexport default class Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      //initial state\r\n      xORo: true,\r\n      stepNumber: 0,\r\n      history: [{ squares: Array(9).fill(null) }],\r\n    };\r\n  }\r\n  //Jumping to special move\r\n  move_To(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xORo: step % 2 === 0,\r\n      history: this.state.history.slice(0, step + 1),\r\n    });\r\n  }\r\n  //handeling the clicks\r\n  handeler(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    const winner = whoIsWinner(squares);\r\n    if (squares[i] || winner) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xORo ? \"X\" : \"O\";\r\n    this.setState({\r\n      history: history.concat({\r\n        squares: squares,\r\n      }),\r\n      xORo: !this.state.xORo,\r\n      stepNumber: history.length,\r\n    });\r\n  }\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[history.length - 1];\r\n    const winner = whoIsWinner(current.squares);\r\n    const moves = history.map((step, move) => {\r\n      const desc = move ? \"Go to ( \" + move + \" )\" : \"Start the Game\";\r\n      return (\r\n        <li key={move}>\r\n          <MyButton\r\n            onClick={() => {\r\n              this.move_To(move);\r\n            }}\r\n          >\r\n            {desc}\r\n          </MyButton>\r\n        </li>\r\n      );\r\n    });\r\n    let status = winner\r\n      ? \"Winner is : \" + winner\r\n      : \"Next player is : \" + (this.state.xORo ? \"X\" : \"O\");\r\n    //main board\r\n    return (\r\n      <div className=\"game\">\r\n        <div>\r\n          <Board\r\n            onClick={(i) => this.handeler(i)}\r\n            squares={current.squares}\r\n          ></Board>\r\n        </div>\r\n        <div>\r\n          <ul>\r\n            <Button color=\"primary\">{status}</Button>\r\n          </ul>\r\n          <ul>{moves}</ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//detecting win condition\r\nfunction whoIsWinner(squares) {\r\n  const winnerLines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < winnerLines.length; i++) {\r\n    const [a, b, c] = winnerLines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[b] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n","import \"./index.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Game from \"./components/Game\";\nReactDOM.render(<Game />, document.getElementById(\"root\"));\n"],"sourceRoot":""}